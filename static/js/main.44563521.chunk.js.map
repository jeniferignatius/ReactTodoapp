{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","description","date","Todo","setTodo","Todos","setTodos","inputChanged","event","target","name","value","className","placeholder","onChange","onClick","map","index","row","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiDeA,MA9Cf,WAEE,MAAuBC,mBAAU,CAACC,YAAY,GAAIC,KAAM,KAAxD,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAyBJ,mBAAS,IAAlC,mBAAMK,EAAN,KAAaC,EAAb,KAEMC,EAAe,SAACC,GACpBJ,EAAQ,2BAAID,GAAL,kBAAYK,EAAMC,OAAOC,KAAMF,EAAMC,OAAOE,UAUrD,OACE,sBAAKC,UAAU,MAAf,6BAEC,0CAAiB,uBACtB,uBAAOC,YAAc,cAAcH,KAAM,cAAcC,MAAOR,EAAKF,YAAaa,SAAUP,IAC1F,uBAAOM,YAAc,OAAOH,KAAM,OAAOC,MAAOR,EAAKD,KAAMY,SAAUP,IACrE,wBAAQQ,QAbU,WACdT,EAAS,GAAD,mBAAKD,GAAL,CAAYF,MAYxB,iBAAsC,uBACtC,gCACE,gCAEIE,EAAMW,KAAI,SAACb,EAAMc,GAAP,OACV,+BACC,6BACEd,EAAKF,cAEP,6BACEE,EAAKD,OAEP,6BACD,wBAAQa,QAAU,kBAtBFG,EAsBiBD,OArBnCX,EAAUD,EAAMc,QAAO,SAAChB,EAAMc,GAAP,OAAiBA,IAAUC,MADjC,IAACA,GAsBhB,wBARUD,cClBDG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.44563521.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const[Todo, setTodo] = useState( {description:'', date: ''});\n  const[Todos, setTodos] = useState([]);\n\n  const inputChanged = (event) => {\n    setTodo({...Todo, [event.target.name]:event.target.value });\n  }\n \n  const Addtodo = () => {\n    setTodos([...Todos, Todo]);\n  }\n\n  const deleteTodo = (row)=>{\n    setTodos (Todos.filter((Todo, index) => index !== row))\n  }\n  return (\n    <div className=\"App\">\n    \n     <h3>Todo App</h3><br />\n<input placeholder = \"description\" name= \"description\" value={Todo.description} onChange={inputChanged}/>\n<input placeholder = \"date\" name= \"date\" value={Todo.date} onChange={inputChanged}/>\n<button onClick={Addtodo}>Add</button><br/>\n<table>\n  <tbody>\n    {\n      Todos.map((Todo, index)=>\n      <tr key ={index}>\n       <td>\n        {Todo.description}\n       </td>\n       <td>\n        {Todo.date}\n       </td>\n       <td>\n      <button onClick= {()=>deleteTodo(index)}>Delete</button>\n       </td>\n      </tr>\n      )\n    }\n  </tbody>\n</table>\n</div>\n);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}